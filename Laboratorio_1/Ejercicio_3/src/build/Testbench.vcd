$date
	Mon Aug 19 12:12:00 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Testbench $end
$var wire 4 ! Y [3:0] $end
$var parameter 32 " WIDTH $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 4 % C [3:0] $end
$var reg 4 & D [3:0] $end
$var reg 2 ' S [1:0] $end
$var integer 32 ( i [31:0] $end
$scope module mux0 $end
$var wire 4 ) A [3:0] $end
$var wire 4 * B [3:0] $end
$var wire 4 + C [3:0] $end
$var wire 4 , D [3:0] $end
$var wire 2 - S [1:0] $end
$var parameter 32 . WIDTH $end
$var reg 4 / Y [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 .
b100 "
$end
#0
$dumpvars
b1011 /
b0 -
b11 ,
b11 +
b1 *
b100 )
b0 (
b0 '
b11 &
b1001 %
b1 $
b100 #
b1011 !
$end
#5000
b1010 !
b1010 /
b1 &
b1 +
b1 ,
b10 %
b101 $
b101 *
b1101 #
b1101 )
b1 '
b1 -
b1 (
#10000
b10 !
b10 /
b1100 &
b1100 +
b1100 ,
b1101 %
b1101 $
b1101 *
b110 #
b110 )
b10 (
#15000
b1010 !
b1010 /
b101 &
b101 +
b101 ,
b1010 %
b101 $
b101 *
b11 (
#20000
b1 !
b1 /
b1110 &
b1110 +
b1110 ,
b10 %
b1111 $
b1111 *
b10 #
b10 )
b11 '
b11 -
b100 (
#25000
b1010 !
b1010 /
b1101 &
b1101 +
b1101 ,
b1101 %
b1100 $
b1100 *
b101 #
b101 )
b0 '
b0 -
b101 (
#30000
b101 !
b101 /
b0 &
b0 +
b0 ,
b0 %
b1010 $
b1010 *
b11 #
b11 )
b1 '
b1 -
b110 (
#35000
b10 !
b10 /
b1101 &
b1101 +
b1101 ,
b11 %
b110 $
b110 *
b1101 #
b1101 )
b10 '
b10 -
b111 (
#40000
b1 !
b1 /
b1110 &
b1110 +
b1110 ,
b10 %
b101 $
b101 *
b1011 #
b1011 )
b11 '
b11 -
b1000 (
#45000
b1100 !
b1100 /
b1010 &
b1010 +
b1010 ,
b1010 %
b11 $
b11 *
b1111 #
b1111 )
b1 '
b1 -
b1001 (
#50000
b1101 !
b1101 /
b1000 &
b1000 +
b1000 ,
b1 %
b1010 $
b1010 *
b10 #
b10 )
b0 '
b0 -
b1010 (
#55000
b110 !
b110 /
b110 &
b110 +
b110 ,
b110 %
b1011 $
b1011 *
b1001 #
b1001 )
b1011 (
#60000
b1110 !
b1110 /
b1 &
b1 +
b1 ,
b1011 %
b1010 $
b1010 *
b1100 #
b1100 )
b10 '
b10 -
b1100 (
#65000
b100 !
b100 /
b1110 &
b1110 +
b1110 ,
b1010 %
b1011 $
b1011 *
b1111 #
b1111 )
b1 '
b1 -
b1101 (
#70000
b110 !
b110 /
b1100 &
b1100 +
b1100 ,
b10 %
b1001 $
b1001 *
b1 #
b1 )
b1110 (
#75000
b0 !
b0 /
b1111 &
b1111 +
b1111 ,
b111 %
b1000 $
b1000 *
b1111 #
b1111 )
b11 '
b11 -
b1111 (
#80000
b100 !
b100 /
b0 &
b0 +
b0 ,
b1001 %
b1001 $
b1001 *
b1011 #
b1011 )
b0 '
b0 -
b10000 (
#85000
b1101 !
b1101 /
b10 &
b10 +
b10 ,
b1100 %
b110 $
b110 *
b1 #
b1 )
b11 '
b11 -
b10001 (
#90000
b1000 !
b1000 /
b1110 &
b1110 +
b1110 ,
b10 %
b1101 $
b1101 *
b111 #
b111 )
b0 '
b0 -
b10010 (
#95000
b0 !
b0 /
b101 &
b101 +
b101 ,
b11 %
b1111 $
b1111 *
b1001 #
b1001 )
b1 '
b1 -
b10011 (
#100000
b100 !
b100 /
b1010 &
b1010 +
b1010 ,
b1111 %
b1001 $
b1001 *
b1011 #
b1011 )
b0 '
b0 -
b10100 (
#105000
b1001 !
b1001 /
b1100 %
b1110 $
b1110 *
b110 #
b110 )
b10101 (
#110000
b1100 !
b1100 /
b11 &
b11 +
b11 ,
b1111 %
b11 $
b11 *
b11 #
b11 )
b10 '
b10 -
b10110 (
#115000
b1001 !
b1001 /
b110 &
b110 +
b110 ,
b1011 %
b111 $
b111 *
b100 #
b100 )
b11 '
b11 -
b10111 (
#120000
b1010 !
b1010 /
b101 &
b101 +
b101 ,
b1010 %
b1101 $
b1101 *
b1001 #
b1001 )
b10 '
b10 -
b11000 (
#125000
b110 !
b110 /
b0 &
b0 +
b0 ,
b100 %
b1001 $
b1001 *
b1111 #
b1111 )
b1 '
b1 -
b11001 (
#130000
b101 !
b101 /
b1010 &
b1010 +
b1010 ,
b1100 %
b1110 $
b1110 *
b1011 #
b1011 )
b10 '
b10 -
b11010 (
#135000
b1001 !
b1001 /
b111 &
b111 +
b111 ,
b1110 %
b110 $
b110 *
b11 #
b11 )
b1 '
b1 -
b11011 (
#140000
b111 !
b111 /
b1000 &
b1000 +
b1000 ,
b1001 %
b1000 $
b1000 *
b110 #
b110 )
b10 '
b10 -
b11100 (
#145000
b1100 !
b1100 /
b1011 &
b1011 +
b1011 ,
b100 $
b100 *
b11 #
b11 )
b0 '
b0 -
b11101 (
#150000
b10 !
b10 /
b1010 &
b1010 +
b1010 ,
b110 %
b1101 $
b1101 *
b1001 #
b1001 )
b1 '
b1 -
b11110 (
#155000
b1000 !
b1000 /
b111 &
b111 +
b111 ,
b100 %
b110 $
b110 *
b101 #
b101 )
b10 '
b10 -
b11111 (
#160000
b111 !
b111 /
b1101 &
b1101 +
b1101 ,
b1000 %
b1000 $
b1000 *
b100 #
b100 )
b1 '
b1 -
b100000 (
#165000
b10 !
b10 /
b1100 %
b1110 #
b1110 )
b11 '
b11 -
b100001 (
#170000
b1001 !
b1001 /
b1010 %
b110 $
b110 *
b1100 #
b1100 )
b1 '
b1 -
b100010 (
#175000
b1 !
b1 /
b1110 &
b1110 +
b1110 ,
b11 $
b11 *
b0 #
b0 )
b10 '
b10 -
b100011 (
#180000
b1000 !
b1000 /
b111 &
b111 +
b111 ,
b1001 %
b1010 $
b1010 *
b101 #
b101 )
b100100 (
#185000
b10 !
b10 /
b1101 &
b1101 +
b1101 ,
b110 %
b110 $
b110 *
b0 #
b0 )
b100101 (
#190000
b1001 !
b1001 /
b1011 &
b1011 +
b1011 ,
b1110 %
b1000 $
b1000 *
b110 #
b110 )
b0 '
b0 -
b100110 (
#195000
b1000 !
b1000 /
b111 &
b111 +
b111 ,
b1 %
b1010 $
b1010 *
b1001 #
b1001 )
b11 '
b11 -
b100111 (
#200000
b1111 !
b1111 /
b101 &
b101 +
b101 ,
b101 %
b0 $
b0 *
b110 #
b110 )
b1 '
b1 -
b101000 (
#205000
b1010 !
b1010 /
b1011 &
b1011 +
b1011 ,
b1000 %
b101 $
b101 *
b1 #
b1 )
b101001 (
#210000
b111 !
b111 /
b1000 &
b1000 +
b1000 ,
b1110 %
b1010 $
b1010 *
b1100 #
b1100 )
b11 '
b11 -
b101010 (
#215000
b1 !
b1 /
b1111 &
b1111 +
b1111 ,
b110 %
b1110 $
b1110 *
b1 #
b1 )
b1 '
b1 -
b101011 (
#220000
b111 !
b111 /
b1000 &
b1000 +
b1000 ,
b1110 %
b1101 $
b1101 *
b1010 #
b1010 )
b10 '
b10 -
b101100 (
#225000
b101 !
b101 /
b1011 &
b1011 +
b1011 ,
b11 %
b1010 $
b1010 *
b1000 #
b1000 )
b1 '
b1 -
b101101 (
#230000
b110 !
b110 /
b1001 &
b1001 +
b1001 ,
b100 %
b110 #
b110 )
b11 '
b11 -
b101110 (
#235000
b101 !
b101 /
b1010 &
b1010 +
b1010 ,
b110 %
b1111 $
b1111 *
b100 #
b100 )
b10 '
b10 -
b101111 (
#240000
b1011 !
b1011 /
b100 &
b100 +
b100 ,
b100 %
b1101 $
b1101 *
b10 #
b10 )
b110000 (
#245000
b100 !
b100 /
b1011 &
b1011 +
b1011 ,
b1110 %
b1 $
b1 *
b1001 #
b1001 )
b110001 (
#250000
b11 '
b11 -
b110010 (
#255000
